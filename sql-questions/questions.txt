CREATE DATABASE ORG;		-- Create an ORG database
SHOW DATABASES;
USE ORG;

 CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);
 

INSERT INTO Worker VALUES
		(001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'),
		(002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin'),
		(003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'),
		(004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
		(005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),
		(006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),
		(007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00', 'Account'),
		(008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin');
        
SELECT * FROM Worker;

CREATE TABLE Bonus (
	WORKER_REF_ID INT,		
	BONUS_AMOUNT INT(10),
	BONUS_DATE DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
);


INSERT INTO Bonus VALUES
		(001, 5000, '16-02-20'),
		(002, 3000, '16-06-11'),
		(003, 4000, '16-02-20'),
		(001, 4500, '16-02-20'),
		(002, 3500, '16-06-11');
        
        
SELECT * FROM Bonus;
        
CREATE TABLE Title (
	WORKER_REF_ID INT,
	WORKER_TITLE CHAR(25),
	AFFECTED_FROM DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
);

	


INSERT INTO Title 
	(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
 (001, 'Manager', '2016-02-20 00:00:00'),
 (002, 'Executive', '2016-06-11 00:00:00'),
 (008, 'Executive', '2016-06-11 00:00:00'),
 (005, 'Manager', '2016-06-11 00:00:00'),
 (004, 'Asst. Manager', '2016-06-11 00:00:00'),
 (007, 'Executive', '2016-06-11 00:00:00'),
 (006, 'Lead', '2016-06-11 00:00:00'),
 (003, 'Lead', '2016-06-11 00:00:00');
 
 SELECT * FROM Title;
 
 

 -- Q-1. Write an SQL query to fetch “FIRST_NAME” from Worker table using the alias name as <WORKER_NAME>.
	select FIRST_NAME as WORKER_NAME from Worker;
    

-- Q-2. Write an SQL query to fetch “FIRST_NAME” from Worker table in upper case.
		select ucase(FIRST_NAME) from Worker;

-- Q-3. Write an SQL query to fetch unique values of DEPARTMENT from Worker table.
		select distinct DEPARTMENT from Worker;

-- Q-4. Write an SQL query to print the first three characters of  FIRST_NAME from Worker table.
		select substring(FIRST_NAME,1,3) from Worker;

-- Q-5. Write an SQL query to find the position of the alphabet (‘b’) in the first name column ‘Amitabh’ from Worker table.
-- INSTRA function detects the first occurrence of a string or a character in the other string.


-- Q-6. Write an SQL query to print the FIRST_NAME from Worker table after removing white spaces from the right side.
		select rtrim(FIRST_NAME) from Worker;

-- Q-7. Write an SQL query to print the DEPARTMENT from Worker table after removing white spaces from the left side.
		

-- Q-8. Write an SQL query that fetches the unique values of DEPARTMENT from Worker table and prints its length.
			select distinct DEPARTMENT, length(DEPARTMENT) as length from Worker;

-- Q-9. Write an SQL query to print the FIRST_NAME from Worker table after replacing ‘a’ with ‘A’.
			select replace(FIRST_NAME,'a','A') from Worker; 

-- Q-10. Write an SQL query to print the FIRST_NAME and LAST_NAME from Worker table into a single column as COMPLETE_NAME.
			
            select concat(FIRST_NAME, ' ',LAST_NAME) as COMPLETE_NAME from Worker;

-- Q-11. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending.
		select * from Worker order by FIRST_NAME;

-- Q-12. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending and DEPARTMENT Descending.
		select * from Worker order by FIRST_NAME, DEPARTMENT DESC;

-- Q-13. Write an SQL query to print details for Workers with the first name as “Vipul” and “Satish” from Worker table.
		SELECT * from Worker where FIRST_NAME in ('Vipul', 'Satish');

-- Q-14. Write an SQL query to print details of workers excluding first names, “Vipul” and “Satish” from Worker table.
		SELECT * from Worker where FIRST_NAME not in ('Vipul', 'Satish');

-- Q-15. Write an SQL query to print details of Workers with DEPARTMENT name as “Admin*”.
			select * from Worker where DEPARTMENT like 'Admin%';

-- Q-16. Write an SQL query to print details of the Workers whose FIRST_NAME contains ‘a’.
			select * from Worker where FIRST_NAME like '%a%';			

-- Q-17. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘a’.
			select * from Worker where FIRST_NAME like '%a';	

-- Q-18. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘h’ and contains six alphabets.
		select * from Worker where FIRST_NAME like '_____h';

-- Q-19. Write an SQL query to print details of the Workers whose SALARY lies between 100000 and 500000.
		select * from worker where salary between 100000 and 500000;

-- Q-20. Write an SQL query to print details of the Workers who have joined in Feb’2014.	
		select * from worker where year(JOINING_DATE)= 2014 and month(JOINING_DATE)=02;

-- Q-21. Write an SQL query to fetch the count of employees working in the department ‘Admin’.
		select count(DEPARTMENT) from Worker where DEPARTMENT = "Admin";
		
-- Q-22. Write an SQL query to fetch worker full names with salaries >= 50000 and <= 100000.
		select concat(FIRST_NAME,' ',LAST_NAME) from Worker where salary between 50000 and 100000;

-- Q-23. Write an SQL query to fetch the no. of workers for each department in the descending order.
		select department, count(Worker_id) as c from worker group by department order by c desc;

-- Q-24. Write an SQL query to print details of the Workers who are also Managers.
		select distinct w.* from worker as w inner join title as t on w.worker_id = t.WORKER_REF_ID where t.WORKER_TITLE = 'Manager';

-- Q-25. Write an SQL query to fetch number (more than 1) of same titles in the ORG of different types.
		select count(WORKER_TITLE) as c from title group by WORKER_TITLE having c>1;

-- Q-26. Write an SQL query to show only odd rows from a table.
			select * from worker where worker_id%2=1;

-- Q-27. Write an SQL query to show only even rows from a table. 

-- Q-28. Write an SQL query to clone a new table from another table.
			create table worker_clone like worker;
            insert into worker_clone select * from Worker;
            
            select * from worker_clone;
            

-- Q-29. Write an SQL query to fetch intersecting records of two tables.


-- Q-30. Write an SQL query to show records from one table that another table does not have.
-- MINUS


-- Q-31. Write an SQL query to show the current date and time.
		select now();
        select current_time();

-- Q-32. Write an SQL query to show the top n (say 5) records of a table order by descending salary.
		select * from worker order by salary desc limit 5;

-- Q-33. Write an SQL query to determine the nth (say n=5) highest salary from a table.
		select * from worker order by salary desc limit 4,1;	-- limit offset,value

-- Q-34. Write an SQL query to determine the 5th highest salary without using LIMIT keyword.
		
 
-- Q-35. Write an SQL query to fetch the list of employees with the same salary.
	


-- Q-36. Write an SQL query to show the highest salary from a table using sub-query.
		select max(Salary) from worker where salary not in (select max(Salary) from worker);
			

-- Q-37. Write an SQL query to show one row twice in results from a table.
		select * from worker
        union all 
        select * from worker order by worker_id;

-- Q-38. Write an SQL query to list worker_id who does not get bonus.
		select worker_id from worker where worker_id not in (select WORKER_REF_ID from bonus);

-- Q-39. Write an SQL query to fetch the first 50% records from a worker table.
		
        select * from worker where worker_id <=(select count(worker_id)/2 from worker);

-- Q-40. Write an SQL query to fetch the departments that have less than 4 people in it.
			select department, count(department) as d from worker group by department having d<4;

-- Q-41. Write an SQL query to show all departments along with the number of people in there.
		select department,count(department) as priti from worker group by department having priti>2;

-- Q-42. Write an SQL query to show the last record from a table.
		select * from worker where worker_id = (select max(worker_id) from worker);
        

-- Q-43. Write an SQL query to fetch the first row of a table.


-- Q-44. Write an SQL query to fetch the last five records from a table.
			(select * from worker order by worker_id desc limit 5) order by worker_id;

-- Q-45. Write an SQL query to print the name of employees having the highest salary in each department.

 
 -- Q-46. Write an SQL query to fetch three max salaries from a table using co-related subquery
 

-- Q-47. Write an SQL query to fetch three min salaries from a table using co-related subquery


-- Q-48. Write an SQL query to fetch nth max salaries from a table.


-- Q-49. Write an SQL query to fetch departments along with the total salaries paid for each of them.


-- Q-50. Write an SQL query to fetch the names of workers who earn the highest salary.
		
 